// Code generated by mockery v2.15.0. DO NOT EDIT.

package mocks

import (
	kafka "github.com/confluentinc/confluent-kafka-go/kafka"
	mock "github.com/stretchr/testify/mock"
)

// IPublisher is an autogenerated mock type for the IPublisher type
type IPublisher struct {
	mock.Mock
}

// Produce provides a mock function with given fields: msg, deliveryChan
func (_m *IPublisher) Produce(msg *kafka.Message, deliveryChan chan kafka.Event) error {
	ret := _m.Called(msg, deliveryChan)

	var r0 error
	if rf, ok := ret.Get(0).(func(*kafka.Message, chan kafka.Event) error); ok {
		r0 = rf(msg, deliveryChan)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

type mockConstructorTestingTNewIPublisher interface {
	mock.TestingT
	Cleanup(func())
}

// NewIPublisher creates a new instance of IPublisher. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewIPublisher(t mockConstructorTestingTNewIPublisher) *IPublisher {
	mock := &IPublisher{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
